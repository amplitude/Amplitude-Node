name: Publish to Github Packages

on:
  workflow_dispatch:
    inputs:
      packageVersion:
        description: "The version to publish (e.g. prerelease, patch, major)"
        required: true
        default: "prerelease"
      distTag:
        description: "The dist-tag to publish (e.g. latest, beta)"
        required: true
        default: "latest"

jobs:
  authorize:
    name: Authorize
    runs-on: ubuntu-latest
    steps:
      - name: Get ${{ github.actor }} user permissions
        uses: octokit/request-action@v2.0.0
        id: permission_check
        with:
          route: GET /repos/${{ github.repository }}/collaborators/${{ github.actor }}/permission
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract user permission level
        run: |
          echo "user_permission=${{ fromJson(steps.permission_check.outputs.data).permission }}" >> $GITHUB_ENV

      - name: Determine write permission
        run: |
          echo "user_has_write_permission=${{ env.user_permission == 'write' || env.user_permission == 'admin' }}" >> $GITHUB_ENV

      - name: "Auth Success"
        if: ${{ env.user_has_write_permission }}
        run: echo "${{ github.actor }} is authorized."

      - name: "Auth Failed"
        if: ${{ failure() || !env.user_has_write_permission }}
        run: |
          echo "Unable to authorize ${{ github.actor }}. You must have write permission to run this workflow."
          exit 1

  release:
    name: Publish to Github Packages
    runs-on: ubuntu-latest
    needs: [authorize]
    env:
      PACKAGE_VERSION: ${{ github.event.inputs.packageVersion }}
      DIST_TAG: ${{ github.event.inputs.distTag }}
    strategy:
      matrix:
        node-version: [ 14.x ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: Install
        run: yarn install --frozen-lockfile

      - name: Build
        run: yarn build

      - name: Lint
        run: yarn lint

      - name: Test
        run: yarn test

      - name: Set registry url
        uses: actions/setup-node@v2
        with:
          registry-url: 'https://npm.pkg.github.com'

      - name: Publish
        run: |
          lerna publish ${{ env.PACKAGE_VERSION }} --no-git-tag-version --no-push --force-publish --dist-tag ${{ env.DIST_TAG }} --yes --no-verify-access --ignore-prepublish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
